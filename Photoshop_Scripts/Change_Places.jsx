/* * Copyright (c) 2015 Ashung Hung *  * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *    http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */(function(){    'use strict'    if(getSelectedLayersIndexs().length != 2) {        alert('Select 2 layers first.');        return;    }    var selectedLayers = getSelectedLayersIndexs();        // Bottom layer    selectLayerByIndex(selectedLayers[0]);    var places_bottom_layer = activeDocument.activeLayer.bounds;    //$.writeln('B:' + places_bottom_layer);        // Top layer    selectLayerByIndex(selectedLayers[1]);    var places_top_layer = activeDocument.activeLayer.bounds;    //$.writeln('T:' + places_top_layer);    moveTo(places_bottom_layer);        selectLayerByIndex(selectedLayers[0]);    moveTo(places_top_layer);                function moveTo(bounds) {        var x = bounds[0] - activeDocument.activeLayer.bounds[0];        var y = bounds[1] - activeDocument.activeLayer.bounds[1];        activeDocument.activeLayer.translate(x, y);    }    function getSelectedLayersIndexs() {        var selectedLayers = new Array;        var ref = new ActionReference();            ref.putEnumerated(charIDToTypeID('Dcmn'), charIDToTypeID('Ordn'), charIDToTypeID('Trgt'));        var desc = executeActionGet(ref);        if(desc.hasKey(stringIDToTypeID('targetLayers'))) {            desc = desc.getList(stringIDToTypeID('targetLayers'));            var c = desc.count;            for(var i = 0; i < c; i++) {                try {                    activeDocument.backgroundLayer;                    selectedLayers.push(desc.getReference(i).getIndex());                } catch(e) {                    selectedLayers.push(desc.getReference( i ).getIndex()+1);                }            }        } else {            var ref = new ActionReference();            ref.putProperty(charIDToTypeID('Prpr'), charIDToTypeID('ItmI'));            ref.putEnumerated( charIDToTypeID('Lyr '), charIDToTypeID('Ordn'), charIDToTypeID('Trgt') );            try {                activeDocument.backgroundLayer;                selectedLayers.push(executeActionGet(ref).getInteger(charIDToTypeID('ItmI'))-1);            } catch(e) {                selectedLayers.push(executeActionGet(ref).getInteger(charIDToTypeID('ItmI')));            }        }        return selectedLayers;    }    function selectLayerByIndex(index) {        var desc1 = new ActionDescriptor();        var ref1 = new ActionReference();            ref1.putIndex(charIDToTypeID("Lyr "), index);            desc1.putReference(charIDToTypeID("null"), ref1);            executeAction(charIDToTypeID("slct"), desc1, DialogModes.NO);    }})();