//~ $Ps =//~ {//~     $File : {//~         $New : function (width, height) {},//~         $Open : function (targetFile) {},//~         $OpenAsSmartObject : function (targetFile) {},//~         $Close : function () {},//~         $CloseAll : function () {},//~         $Save : function () {},//~         $SaveAs : function () {},//~         $Revert : function () {},//~         $SaveForWeb : {//~             $PNG24 : function () {},//~             $PNG8 : function () {},//~             $GIF : function () {},//~             $JPG : function () {}//~         },//~         $PlaceEmbedded : function () {},//~         $PlaceLinked : function () {},//~         $Scripts : {//~             $Run : function (jsx) {},//~             $Browser : function (scriptFile) {}//~         },//~     },//~     $Edit : {//~         $Cut : function () {},//~         $Copy : function () {},//~         $CopyMerged : function () {},//~         $Paste : function () {},//~         $PasteInPlace : function () {},//~         $PasteInto : function () {},//~         $PasteOutside : function () {},//~         $Clear : function () {},//~         $Fill : function () {},//~         $Stroke : function () {},//~         $Transform: {//~             $Again : function () {},//~             $Scale : function () {},//~             $Rotate : function () {},//~             $Skew : function () {},//~             $Distort : function () {},//~             $Perspective : function () {},//~             $Warp : function () {},//~             $FilpHorizontal : function () {},//~             $FilpVertical : function () {},//~         }//~     },//~     $Image : {//~         $ImageSize : function () {},//~         $CanvasSize : function () {},//~         $ImageRotation : function () {},//~         $FlipCanvasHorizontal : function () {},//~         $FlipCanvasVertical : function () {},//~         $Crop : function () {},//~         $Trim : function () {},//~         $RevealAll : function () {},//~         $Duplicate : function () {},//~//~     },//~     $Layer : {//~         $New : {//~             $Layer : function () {},//~             $Background : function () {},//~             $Group : function () {},//~         },//~         $Duplicate : function () {},//~         $Delete : function () {},//~         $DeleteHiddenLayers : function () {},//~         $RenameLayer : function () {},//~         $NewFillLayer : function () {},//~         $LayerMask : {//~             $RevealAll : function () {},//~             $HideAll : function () {},//~             $RevealSelection : function () {},//~             $HideSelection : function () {},//~             $FromTransparency : function () {},//~             $Delete : function () {},//~             $Apply : function () {},//~             $Enable : function () {},//~             $Disable : function () {},//~             $Link : function () {},//~             $Unlink: function () {},//~         },//~         $VectorMask : {//~             $RevealAll : function () {},//~             $HideAll : function () {},//~             $CurrentPath : function () {},//~             $Delete : function () {},//~             $Enable : function () {},//~             $Disable : function () {},//~             $Link : function () {},//~             $Unlink: function () {},//~         },//~         $Arrange : {//~             $BringToFront : function () {},//~             $BringForward : function () {},//~             $SendBackward : function () {//~                 var idmove = charIDToTypeID( "move" );//~                 var desc3294 = new ActionDescriptor();//~                 var idnull = charIDToTypeID( "null" );//~                 var ref2007 = new ActionReference();//~                 var idLyr = charIDToTypeID( "Lyr " );//~                 var idOrdn = charIDToTypeID( "Ordn" );//~                 var idTrgt = charIDToTypeID( "Trgt" );//~                 ref2007.putEnumerated( idLyr, idOrdn, idTrgt );//~                 desc3294.putReference( idnull, ref2007 );//~                 var idT = charIDToTypeID( "T   " );//~                 var ref2008 = new ActionReference();//~                 var idLyr = charIDToTypeID( "Lyr " );//~                 var idOrdn = charIDToTypeID( "Ordn" );//~                 var idPrvs = charIDToTypeID( "Prvs" );//~                 ref2008.putEnumerated( idLyr, idOrdn, idPrvs );//~                 desc3294.putReference( idT, ref2008 );//~                 executeAction( idmove, desc3294, DialogModes.NO );//~             },//~             $SendToBack : function () {//~                 var idmove = charIDToTypeID( "move" );//~                 var desc3295 = new ActionDescriptor();//~                 var idnull = charIDToTypeID( "null" );//~                 var ref2009 = new ActionReference();//~                 var idLyr = charIDToTypeID( "Lyr " );//~                 var idOrdn = charIDToTypeID( "Ordn" );//~                 var idTrgt = charIDToTypeID( "Trgt" );//~                     ref2009.putEnumerated( idLyr, idOrdn, idTrgt );//~                     desc3295.putReference( idnull, ref2009 );//~                 var idT = charIDToTypeID( "T   " );//~                 var ref2010 = new ActionReference();//~                 var idLyr = charIDToTypeID( "Lyr " );//~                 var idOrdn = charIDToTypeID( "Ordn" );//~                 var idBack = charIDToTypeID( "Back" );//~                     ref2010.putEnumerated( idLyr, idOrdn, idBack );//~                     desc3295.putReference( idT, ref2010 );//~                     executeAction( idmove, desc3295, DialogModes.NO );//~             },//~             $Reverse : function () {}//~         }//~     },//~     $Type : {},//~     $Select : {},//~     $Filter : {},//~     $View : {},//~     $Window : {//~         _Adjustment: {},//~         _Channels: {},//~         _Colors: {},//~         _History: {},//~         _LayerComps: {},//~         _Layers: {},//~         _Paths: {},//~         _Styles: {//~             _Save_Styles: function(aslPath) {//~                 var idsetd = charIDToTypeID("setd");//~                 var desc1 = new ActionDescriptor();//~                 var idnull = charIDToTypeID("null");//~                     desc1.putPath(idnull, new File(aslPath);//~                 var idT = charIDToTypeID("T   ");//~                 var ref1 = new ActionReference();//~                 var idPrpr = charIDToTypeID("Prpr");//~                 var idStyl = charIDToTypeID("Styl");//~                     ref1.putProperty(idPrpr, idStyl);//~                 var idcapp = charIDToTypeID("capp");//~                 var idOrdn = charIDToTypeID("Ordn");//~                 var idTrgt = charIDToTypeID("Trgt");//~                     ref1.putEnumerated(idcapp, idOrdn, idTrgt);//~                     desc1.putReference(idT, ref1);//~                     executeAction(idsetd, desc1, DialogModes.NO);//~             },//~             _Replace_Styles: function(aslPath) {//~                 var idsetd = charIDToTypeID("setd");//~                 var desc1 = new ActionDescriptor();//~                 var idnull = charIDToTypeID("null");//~                 var ref1 = new ActionReference();//~                 var idPrpr = charIDToTypeID("Prpr");//~                 var idStyl = charIDToTypeID("Styl");//~                     ref1.putProperty(idPrpr, idStyl);//~                 var idcapp = charIDToTypeID("capp");//~                 var idOrdn = charIDToTypeID("Ordn");//~                 var idTrgt = charIDToTypeID("Trgt");//~                     ref1.putEnumerated(idcapp, idOrdn, idTrgt);//~                     desc1.putReference(idnull, ref1);//~                 var idT = charIDToTypeID("T   ");//~                     desc1.putPath(idT, new File(aslPath));//~                     executeAction(idsetd, desc1, DialogModes.NO);//~             }//~         },//~         _Swatches: {}//~     },//~     $Panel : {}//~ }/////////////////////////////////////////////////////////////////////////////////  File//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// Edit//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// Image///////////////////////////////////////////////////////////////////////////////_Ps._Image._Trim = function () {    activeDocument.trim(TrimType.TRANSPARENT);}///////////////////////////////////////////////////////////////////////////////// Layer///////////////////////////////////////////////////////////////////////////////_Ps._Layer._New = {    _Layer: {},    _Background_from_Layer: {},    _Group: {},    _Group_from_Layers: {},}_Ps._Layer._Hide_Layers = function() {    var idHd = charIDToTypeID("Hd  ");    var desc1 = new ActionDescriptor();    var idnull = charIDToTypeID("null");    var list1 = new ActionList();    var ref1 = new ActionReference();    var idLyr = charIDToTypeID("Lyr ");    var idOrdn = charIDToTypeID("Ordn");    var idTrgt = charIDToTypeID("Trgt");    ref1.putEnumerated(idLyr, idOrdn, idTrgt);    list1.putReference(ref1 );    desc1.putList(idnull, list1);    executeAction(idHd, desc1, DialogModes.NO);}_Ps._Layer._Show_Layers = function() {    var idShw = charIDToTypeID("Shw ");    var desc1 = new ActionDescriptor();    var idnull = charIDToTypeID("null");    var list1 = new ActionList();    var ref1 = new ActionReference();    var idLyr = charIDToTypeID("Lyr ");    var idOrdn = charIDToTypeID("Ordn");    var idTrgt = charIDToTypeID("Trgt");    ref1.putEnumerated(idLyr, idOrdn, idTrgt);    list1.putReference(ref1);    desc1.putList(idnull, list1);    executeAction(idShw, desc1, DialogModes.NO);}_Ps._Layer._Layer_Content_Options = function() {    var desc1 = new ActionDescriptor();    var ref1 = new ActionReference();    ref1.putEnumerated(stringIDToTypeID("contentLayer"), charIDToTypeID('Ordn'), charIDToTypeID('Trgt'));    desc1.putReference(charIDToTypeID('null'), ref1);    var desc2 = new ActionDescriptor();    var desc3 = new ActionDescriptor();    desc3.putDouble(charIDToTypeID('Rd  '), 51.0031127929688);    desc3.putDouble(charIDToTypeID('Grn '), 51.0031127929688);    desc3.putDouble(charIDToTypeID('Bl  '), 51.0031127929688);    desc2.putObject(charIDToTypeID('Clr '), stringIDToTypeID("RGBColor"), desc3);    desc1.putObject(charIDToTypeID('T   '), stringIDToTypeID("solidColorLayer"), desc2);    executeAction(charIDToTypeID('setd'), desc1, DialogModes.NO);}_Ps._Layer._Smart_Objects._Convert_to_Smart_Object = function() {    try{        executeAction(stringIDToTypeID('newPlacedLayer'), undefined, DialogModes.NO);    }catch(e){        activeDocument.activeLayer = activeDocument.layers[activeDocument.layers.length - 1];        activeDocument.activeLayer = activeDocument.layers[0];        executeAction(stringIDToTypeID('newPlacedLayer'), undefined, DialogModes.NO);    }}///////////////////////////////////////////////////////////////////////////////// Type//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// Filter//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// View///////////////////////////////////////////////////////////////////////////////_Ps._View._Clear_Slices = function() {    try {        var desc1 = new ActionDescriptor();        var ref1 = new ActionReference();            ref1.putEnumerated(charIDToTypeID('Mn  '), charIDToTypeID('MnIt'), stringIDToTypeID("clearSlices"));            desc1.putReference(charIDToTypeID('null'), ref1);        executeAction(charIDToTypeID('slct'), desc1, DialogModes.NO);    } catch(e) {}}///////////////////////////////////////////////////////////////////////////////// Window/////////////////////////////////////////////////////////////////////////////////~ _Ps._Windows._History._NewSnapShot(name) {//~     var idMk = charIDToTypeID("Mk  ");//~     var desc1 = new ActionDescriptor();//~     var ref1 = new ActionReference();//~         ref1.putClass(charIDToTypeID("SnpS"));//~         desc1.putReference(charIDToTypeID("null"), ref1);//~     var ref2 = new ActionReference();//~         ref2.putProperty(charIDToTypeID("HstS"), charIDToTypeID("CrnH"));//~         desc1.putReference(charIDToTypeID("From"), ref2);//~         desc1.putString(charIDToTypeID("Nm  "), name);//~         desc1.putEnumerated(charIDToTypeID("Usng"), charIDToTypeID("HstS"), charIDToTypeID("FllD"));//~         executeAction(idMk, desc1, DialogModes.NO);//~ }/* * @param SolidColor  color * @param String  name *///~ _Ps._Windows._Swatches._NewSwatch(color, name) {//~     var red = color.rgb.red;//~     var green = color.rgb.green;//~     var blue = color.rgb.blue;//~     ////~     var addColorDescriptor = new ActionDescriptor();//~     // Get reference to Swatches panel//~     var swatchesPanelReference = new ActionReference();//~     swatchesPanelReference.putClass(stringIDToTypeID('colors'));//~     addColorDescriptor.putReference(stringIDToTypeID('null'), swatchesPanelReference);//~     // Setup a swatch and give it a name//~     var descriptorSwatch = new ActionDescriptor();//~     descriptorSwatch.putString(stringIDToTypeID('name'), name);//~     // Add RGB color information to the swatch//~     var descriptorColor = new ActionDescriptor();//~     descriptorColor.putDouble(stringIDToTypeID('red'), red);//~     descriptorColor.putDouble(stringIDToTypeID('grain'), green); // grain = green//~     descriptorColor.putDouble(stringIDToTypeID('blue'), blue);//~     // Add RGB to the swatch//~     descriptorSwatch.putObject(stringIDToTypeID('color'), stringIDToTypeID('RGBColor'), descriptorColor);//~     // Add swatch to the color descriptor//~     addColorDescriptor.putObject(stringIDToTypeID('using'), stringIDToTypeID('colors'), descriptorSwatch);//~     // Send to Photoshop//~     executeAction(stringIDToTypeID('make'), addColorDescriptor, DialogModes.NO);//~ }/////////////////////////////////////////////////////////////////////////////////  Tools///////////////////////////////////////////////////////////////////////////////_Ps._Tools._Move = {    _MoveTo: function(x, y) {        activeDocument.activeLayer.translate(UnitValue(x, 'px')  - activeDocument.activeLayer.bounds[0], UnitValue(y, 'px') - activeDocument.activeLayer.bounds[1]);    }}//selectTool('moveTool');//selectTool('marqueeRectTool');//selectTool('marqueeEllipTool');//selectTool('marqueeSingleRowTool');//selectTool('marqueeSingleColumnTool');//selectTool('lassoTool');//selectTool('polySelTool');//selectTool('magneticLassoTool');//selectTool('quickSelectTool');//selectTool('magicWandTool');//selectTool('cropTool');//selectTool('sliceTool');//selectTool('sliceSelectTool');//selectTool('spotHealingBrushTool');//selectTool('magicStampTool');//selectTool('patchSelection');//selectTool('redEyeTool');//selectTool('paintbrushTool');//selectTool('pencilTool');//selectTool('colorReplacementBrushTool');//selectTool('cloneStampTool');//selectTool('patternStampTool');//selectTool('historyBrushTool');//selectTool('artBrushTool');//selectTool('eraserTool');//selectTool('backgroundEraserTool');//selectTool('magicEraserTool');//selectTool('gradientTool');//selectTool('bucketTool');//selectTool('blurTool');//selectTool('sharpenTool');//selectTool('smudgeTool');//selectTool('dodgeTool');//selectTool('burnInTool');//selectTool('saturationTool');//selectTool('penTool');//selectTool('freeformPenTool');//selectTool('addKnotTool');//selectTool('deleteKnotTool');//selectTool('convertKnotTool');//selectTool('typeCreateOrEditTool');//selectTool('typeVerticalCreateOrEditTool');//selectTool('typeCreateMaskTool');//selectTool('typeVerticalCreateMaskTool');//selectTool('pathComponentSelectTool');//selectTool('directSelectTool');//selectTool('rectangleTool');//selectTool('roundedRectangleTool');//selectTool('ellipseTool');//selectTool('polygonTool');//selectTool('lineTool');//selectTool('customShapeTool');//selectTool('textAnnotTool');//selectTool('soundAnnotTool');//selectTool('eyedropperTool');//selectTool('colorSamplerTool');//selectTool('rulerTool');//selectTool('handTool');//selectTool('zoomTool');//~ function selectTool(tool) {//~     var desc9 = new ActionDescriptor();//~         var ref7 = new ActionReference();//~         ref7.putClass( app.stringIDToTypeID(tool) );//~     desc9.putReference( app.charIDToTypeID('null'), ref7 );//~     executeAction( app.charIDToTypeID('slct'), desc9, DialogModes.NO );//~ };//~ function smartObjectReplaceContents(filePath) {//~     var idplacedLayerReplaceContents = stringIDToTypeID( "placedLayerReplaceContents" );//~     var desc1 = new ActionDescriptor();//~     var idnull = charIDToTypeID( "null" );//~         desc1.putPath(idnull, new File(filePath));//~     executeAction(idplacedLayerReplaceContents, desc1, DialogModes.NO);//~ }